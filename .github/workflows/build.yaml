name: Release Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize ]

jobs:

  npm-install-cache-linux:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

  npm-install-cache-windows:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "C:\\SeleniumWebDrivers\\ChromeDriver\\chromedriver.exe"

  lint:
    needs:
      - npm-install-cache-linux
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Lint
        run: make lint

  compile:
    needs:
      - npm-install-cache-linux
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Compile
        run: make compile

      - name: Compress Libs
        run:  7z a compiled-libs.zip package.json "integration/*/lib/*" "packages/*/lib/*"
      - uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: compiled-libs
          path: |
            compiled-libs.zip

  test-linux-node-lts-active:
    name: test-linux-node-lts-active (14.x)
    needs:
      - lint
      - compile
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run:  7z x -aoa compiled-libs.zip
      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      # todo: Enable when the tests are ready to run on SauceLabs
      #      - name: Open Sauce Connect Tunnel
      #        uses: saucelabs/sauce-connect-action@v1
      #        with:
      #          username: ${{ secrets.SAUCE_USERNAME }}
      #          accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
      #          tunnelIdentifier: github-serenity-js-test-linux-node-14.x-tunnel

      - name: Test
        run: make test
      # todo: Enable when the tests are ready to run on SauceLabs
      #        env:
      #          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
      #          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

      - uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: test-reports
          path: |
            target/**/*
            package.json

  test-linux-node-lts-other:
    needs:
      - lint
      - compile
    runs-on:  ubuntu-latest
    strategy:
      matrix:
        node-version: [ 12.x, 16.x ]
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run:  7z x -aoa compiled-libs.zip
      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Test
        run: make test

  test-windows-node-lts:
    needs:
      - npm-install-cache-windows
      - lint
      - compile
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [ 12.x, 14.x, 16.x ]
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run:  7z.exe x -aoa compiled-libs.zip
      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "C:\\SeleniumWebDrivers\\ChromeDriver\\chromedriver.exe"

      - name: Test
        run: make test

  integration-test-linux-node-lts-active:
    name: integration-test-linux-node-lts-active
    needs:
      - lint
      - compile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run: 7z x -aoa compiled-libs.zip
      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Integration Test
        run: make integration-test

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: integration-test-linux
          path: integration/web/target/

      - uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: integration-test-reports
          path: |
            target/**/*
            package.json

  integration-test-windows-node-lts-active:
    needs:
      - npm-install-cache-windows
      - lint
      - compile
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run:  7z.exe x -aoa compiled-libs.zip
      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "C:\\SeleniumWebDrivers\\ChromeDriver\\chromedriver.exe"

      - name: Integration Test
        run: make integration-test
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: integration-test-windows
          path: integration/web/target/

  report:
    runs-on:  ubuntu-latest
    needs:
      - test-linux-node-lts-active
      - integration-test-linux-node-lts-active
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Download code coverage reports (test)
        uses: actions/download-artifact@v2
        with:
          name: test-reports
      - name: Download code coverage reports (integration test)
        uses: actions/download-artifact@v2
        with:
          name: integration-test-reports

      - name: Merge code coverage reports
        run: make report

      - name: Publish coverage
        if: github.ref == 'refs/heads/master'
        run: npm run coverage:publish
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  release:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs:
      - test-linux-node-lts-active
      - test-linux-node-lts-other
      - test-windows-node-lts
      - integration-test-linux-node-lts-active
      - integration-test-windows-node-lts-active
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-lerna
        with:
          github_token:   ${{ secrets.GITHUB_TOKEN }}
          git_user_email: ${{ secrets.RELEASE_GH_EMAIL }}
          git_username:   ${{ secrets.RELEASE_GH_USERNAME }} packages/webdriverio/package.json
          npm_token:      ${{ secrets.NPM_TOKEN }}

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run:  7z x -aoa compiled-libs.zip
      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Publish artifacts
        run: npm run lerna:publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: changelog
          path: |
            CHANGELOG.md

  site:
    runs-on: ubuntu-latest
    needs:
      - release
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: ./.github/actions/setup-lerna
        if: github.ref == 'refs/heads/master'
        with:
          github_token:   ${{ secrets.GITHUB_TOKEN }}
          git_user_email: ${{ secrets.RELEASE_GH_EMAIL }}
          git_username:   ${{ secrets.RELEASE_GH_USERNAME }}
          npm_token:      ${{ secrets.NPM_TOKEN }}
      - name: Download changelog
        if: needs.release.result == 'success'
        uses: actions/download-artifact@v2
        with:
          name: changelog
      - name: Setup Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Read NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
            node_modules
            */*/node_modules
            !**/node_modules/@serenity-js
            !**/node_modules/.bin
            !**/node_modules/.cache
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Install Node modules
        run: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Build Serenity/JS website
        run: make site

      - name: Publish website
        if: github.ref == 'refs/heads/master'
        run: npm run site:publish
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
